{"ast":null,"code":"var _jsxFileName = \"/Users/lamnong/Desktop/Code-hw/20/porfolio/src/components/Portfolio/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import Project from '../Project';\n\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Portfolio(props) {\n  _s();\n\n  const projects = useState(props)[0].projects;\n  const name = projects.name;\n  const description = projects.description;\n  const image = projects.image;\n  const techs = projects.technologies;\n  const appLink = projects.deployed;\n  const gitLink = projects.github; // This function parses the information from the array and creates a list.\n\n  function getTechs(techArray) {\n    let techList = \"\";\n\n    for (var i = 0; i < techArray.length; i++) {\n      if (i === techArray.length - 1) {\n        techList += techArray[i];\n      } else {\n        techList += techArray[i] + \", \";\n      }\n    }\n\n    return techList;\n  }\n\n  return (\n    /*#__PURE__*/\n    // <Card style={{ width: \"18rem\" }}>\n    // \t<Card.Img\n    // \t\tvariant=\"top\"\n    // \t\tsrc={require(`../../assets/images/${image}`)}\n    // \t\tclassName=\"card-image\"\n    // \t/>\n    _jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"card-title\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"card-text\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"card-subtitle\",\n          children: \"Techs Used\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"card-techs\",\n          children: getTechs(techs)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n          href: appLink,\n          target: \"_blank\",\n          className: \"card-link\",\n          children: [name, \" App\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n          href: gitLink,\n          target: \"_blank\",\n          className: \"card-link\",\n          children: [name, \" Github\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this) // \t\t</Card>\n\n  );\n}\n\n_s(Portfolio, \"q/7KDEPoukOWMb5Ot/XgBABPGXY=\");\n\n_c = Portfolio;\n;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"names":["React","useState","Card","Portfolio","props","projects","name","description","image","techs","technologies","appLink","deployed","gitLink","github","getTechs","techArray","techList","i","length"],"sources":["/Users/lamnong/Desktop/Code-hw/20/porfolio/src/components/Portfolio/index.js"],"sourcesContent":["import React, {useState} from 'react';\n// import Project from '../Project';\nimport Card from \"react-bootstrap/Card\";\n\nfunction Portfolio(props) {\n\tconst projects = useState\n\t(props)[0].projects;\n\n\tconst name = projects.name;\n\tconst description = projects.description;\n\tconst image = projects.image;\n\tconst techs = projects.technologies;\n\tconst appLink = projects.deployed;\n\tconst gitLink = projects.github;\n\n\t// This function parses the information from the array and creates a list.\n\tfunction getTechs(techArray) {\n\t\tlet techList = \"\";\n\n\t\tfor (var i = 0; i < techArray.length; i++) {\n\t\t\tif (i === techArray.length - 1) {\n\t\t\t\ttechList += techArray[i];\n\t\t\t} else {\n\t\t\t\ttechList += techArray[i] + \", \";\n\t\t\t}\n\t\t}\n\n\t\treturn techList;\n\t}\n\n\t\t\n\t\treturn (\n\t\t\t// <Card style={{ width: \"18rem\" }}>\n\t\t\t// \t<Card.Img\n\t\t\t// \t\tvariant=\"top\"\n\t\t\t// \t\tsrc={require(`../../assets/images/${image}`)}\n\t\t\t// \t\tclassName=\"card-image\"\n\t\t\t// \t/>\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Card.Title className=\"card-title\">{name}</Card.Title>\n\t\t\t\t\t\t<Card.Text className=\"card-text\">{description}</Card.Text>\n\t\t\t\t\t\t<Card.Subtitle className=\"card-subtitle\">Techs Used</Card.Subtitle>\n\t\t\t\t\t\t<Card.Text className=\"card-techs\">{getTechs(techs)}</Card.Text>\n\t\t\t\t\t\t<Card.Link href={appLink} target=\"_blank\" className=\"card-link\">\n\t\t\t\t\t\t\t{name} App\n\t\t\t\t\t\t</Card.Link>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<Card.Link href={gitLink} target=\"_blank\" className=\"card-link\">\n\t\t\t\t\t\t\t{name} Github\n\t\t\t\t\t\t</Card.Link>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</div>\n\t// \t\t</Card>\n\t);\n};\n\nexport default Portfolio;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAAA;;EACzB,MAAMC,QAAQ,GAAGJ,QAAQ,CACxBG,KADwB,CAAR,CACT,CADS,EACNC,QADX;EAGA,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;EACA,MAAMC,WAAW,GAAGF,QAAQ,CAACE,WAA7B;EACA,MAAMC,KAAK,GAAGH,QAAQ,CAACG,KAAvB;EACA,MAAMC,KAAK,GAAGJ,QAAQ,CAACK,YAAvB;EACA,MAAMC,OAAO,GAAGN,QAAQ,CAACO,QAAzB;EACA,MAAMC,OAAO,GAAGR,QAAQ,CAACS,MAAzB,CATyB,CAWzB;;EACA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;IAC5B,IAAIC,QAAQ,GAAG,EAAf;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;MAC1C,IAAIA,CAAC,KAAKF,SAAS,CAACG,MAAV,GAAmB,CAA7B,EAAgC;QAC/BF,QAAQ,IAAID,SAAS,CAACE,CAAD,CAArB;MACA,CAFD,MAEO;QACND,QAAQ,IAAID,SAAS,CAACE,CAAD,CAAT,GAAe,IAA3B;MACA;IACD;;IAED,OAAOD,QAAP;EACA;;EAGA;IAAA;IACC;IACA;IACA;IACA;IACA;IACA;IACC;MAAK,SAAS,EAAC,QAAf;MAAA,uBACC,QAAC,IAAD,CAAM,IAAN;QAAA,wBACC,QAAC,IAAD,CAAM,KAAN;UAAY,SAAS,EAAC,YAAtB;UAAA,UAAoCX;QAApC;UAAA;UAAA;UAAA;QAAA,QADD,eAEC,QAAC,IAAD,CAAM,IAAN;UAAW,SAAS,EAAC,WAArB;UAAA,UAAkCC;QAAlC;UAAA;UAAA;UAAA;QAAA,QAFD,eAGC,QAAC,IAAD,CAAM,QAAN;UAAe,SAAS,EAAC,eAAzB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHD,eAIC,QAAC,IAAD,CAAM,IAAN;UAAW,SAAS,EAAC,YAArB;UAAA,UAAmCQ,QAAQ,CAACN,KAAD;QAA3C;UAAA;UAAA;UAAA;QAAA,QAJD,eAKC,QAAC,IAAD,CAAM,IAAN;UAAW,IAAI,EAAEE,OAAjB;UAA0B,MAAM,EAAC,QAAjC;UAA0C,SAAS,EAAC,WAApD;UAAA,WACEL,IADF;QAAA;UAAA;UAAA;UAAA;QAAA,QALD,eAQC;UAAA;UAAA;UAAA;QAAA,QARD,eASC,QAAC,IAAD,CAAM,IAAN;UAAW,IAAI,EAAEO,OAAjB;UAA0B,MAAM,EAAC,QAAjC;UAA0C,SAAS,EAAC,WAApD;UAAA,WACEP,IADF;QAAA;UAAA;UAAA;UAAA;QAAA,QATD;MAAA;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA,QAPF,CAsBD;;EAtBC;AAwBD;;GAnDQH,S;;KAAAA,S;AAmDR;AAED,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}