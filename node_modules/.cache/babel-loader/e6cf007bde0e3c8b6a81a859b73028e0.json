{"ast":null,"code":"var _jsxFileName = \"/Users/lamnong/Desktop/Code-hw/20/porfolio/src/components/Portfolio/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Project from '../Project';\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Portfolio(props) {\n  _s();\n\n  const projects = useState(props)[0].projects;\n  const name = currentProject.name;\n  const description = currentProject.description;\n  const image = currentProject.image;\n  const techs = currentProject.technologies;\n  const appLink = currentProject.deployed;\n  const gitLink = currentProject.github; // This function parses the information from the array and creates a list.\n\n  function getTechs(techArray) {\n    let techList = \"\";\n\n    for (var i = 0; i < techArray.length; i++) {\n      if (i === techArray.length - 1) {\n        techList += techArray[i];\n      } else {\n        techList += techArray[i] + \", \";\n      }\n    }\n\n    return techList;\n  }\n\n  {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"18rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: require(`../../assets/images/${image}`),\n        className: \"card-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            className: \"card-title\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            className: \"card-text\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n            className: \"card-subtitle\",\n            children: \"Techs Used\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            className: \"card-techs\",\n            children: getTechs(techs)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n            href: appLink,\n            target: \"_blank\",\n            className: \"card-link\",\n            children: [name, \" App\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n            href: gitLink,\n            target: \"_blank\",\n            className: \"card-link\",\n            children: [name, \" Github\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this);\n  }\n}\n\n_s(Portfolio, \"q/7KDEPoukOWMb5Ot/XgBABPGXY=\");\n\n_c = Portfolio;\nexport default Portfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"names":["React","Project","Card","Portfolio","props","projects","useState","name","currentProject","description","image","techs","technologies","appLink","deployed","gitLink","github","getTechs","techArray","techList","i","length","width","require"],"sources":["/Users/lamnong/Desktop/Code-hw/20/porfolio/src/components/Portfolio/index.js"],"sourcesContent":["import React from 'react';\nimport Project from '../Project';\nimport Card from \"react-bootstrap/Card\";\n\nfunction Portfolio(props) {\n\tconst projects = useState\n\t(props)[0].projects;\n\n\tconst name = currentProject.name;\n\tconst description = currentProject.description;\n\tconst image = currentProject.image;\n\tconst techs = currentProject.technologies;\n\tconst appLink = currentProject.deployed;\n\tconst gitLink = currentProject.github;\n\n\t// This function parses the information from the array and creates a list.\n\tfunction getTechs(techArray) {\n\t\tlet techList = \"\";\n\n\t\tfor (var i = 0; i < techArray.length; i++) {\n\t\t\tif (i === techArray.length - 1) {\n\t\t\t\ttechList += techArray[i];\n\t\t\t} else {\n\t\t\t\ttechList += techArray[i] + \", \";\n\t\t\t}\n\t\t}\n\n\t\treturn techList;\n\t}\n\n\t\t{\n\t\treturn (\n\t\t\t<Card style={{ width: \"18rem\" }}>\n\t\t\t\t<Card.Img\n\t\t\t\t\tvariant=\"top\"\n\t\t\t\t\tsrc={require(`../../assets/images/${image}`)}\n\t\t\t\t\tclassName=\"card-image\"\n\t\t\t\t/>\n\t\t\t\t<div className=\"center\">\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Card.Title className=\"card-title\">{name}</Card.Title>\n\t\t\t\t\t\t<Card.Text className=\"card-text\">{description}</Card.Text>\n\t\t\t\t\t\t<Card.Subtitle className=\"card-subtitle\">Techs Used</Card.Subtitle>\n\t\t\t\t\t\t<Card.Text className=\"card-techs\">{getTechs(techs)}</Card.Text>\n\t\t\t\t\t\t<Card.Link href={appLink} target=\"_blank\" className=\"card-link\">\n\t\t\t\t\t\t\t{name} App\n\t\t\t\t\t\t</Card.Link>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<Card.Link href={gitLink} target=\"_blank\" className=\"card-link\">\n\t\t\t\t\t\t\t{name} Github\n\t\t\t\t\t\t</Card.Link>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</div>\n\t\t\t</Card>\n\t);\n}\n}\n\nexport default Portfolio;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAAA;;EACzB,MAAMC,QAAQ,GAAGC,QAAQ,CACxBF,KADwB,CAAR,CACT,CADS,EACNC,QADX;EAGA,MAAME,IAAI,GAAGC,cAAc,CAACD,IAA5B;EACA,MAAME,WAAW,GAAGD,cAAc,CAACC,WAAnC;EACA,MAAMC,KAAK,GAAGF,cAAc,CAACE,KAA7B;EACA,MAAMC,KAAK,GAAGH,cAAc,CAACI,YAA7B;EACA,MAAMC,OAAO,GAAGL,cAAc,CAACM,QAA/B;EACA,MAAMC,OAAO,GAAGP,cAAc,CAACQ,MAA/B,CATyB,CAWzB;;EACA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;IAC5B,IAAIC,QAAQ,GAAG,EAAf;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACG,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;MAC1C,IAAIA,CAAC,KAAKF,SAAS,CAACG,MAAV,GAAmB,CAA7B,EAAgC;QAC/BF,QAAQ,IAAID,SAAS,CAACE,CAAD,CAArB;MACA,CAFD,MAEO;QACND,QAAQ,IAAID,SAAS,CAACE,CAAD,CAAT,GAAe,IAA3B;MACA;IACD;;IAED,OAAOD,QAAP;EACA;;EAEA;IACA,oBACC,QAAC,IAAD;MAAM,KAAK,EAAE;QAAEG,KAAK,EAAE;MAAT,CAAb;MAAA,wBACC,QAAC,IAAD,CAAM,GAAN;QACC,OAAO,EAAC,KADT;QAEC,GAAG,EAAEC,OAAO,CAAE,uBAAsBb,KAAM,EAA9B,CAFb;QAGC,SAAS,EAAC;MAHX;QAAA;QAAA;QAAA;MAAA,QADD,eAMC;QAAK,SAAS,EAAC,QAAf;QAAA,uBACC,QAAC,IAAD,CAAM,IAAN;UAAA,wBACC,QAAC,IAAD,CAAM,KAAN;YAAY,SAAS,EAAC,YAAtB;YAAA,UAAoCH;UAApC;YAAA;YAAA;YAAA;UAAA,QADD,eAEC,QAAC,IAAD,CAAM,IAAN;YAAW,SAAS,EAAC,WAArB;YAAA,UAAkCE;UAAlC;YAAA;YAAA;YAAA;UAAA,QAFD,eAGC,QAAC,IAAD,CAAM,QAAN;YAAe,SAAS,EAAC,eAAzB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHD,eAIC,QAAC,IAAD,CAAM,IAAN;YAAW,SAAS,EAAC,YAArB;YAAA,UAAmCQ,QAAQ,CAACN,KAAD;UAA3C;YAAA;YAAA;YAAA;UAAA,QAJD,eAKC,QAAC,IAAD,CAAM,IAAN;YAAW,IAAI,EAAEE,OAAjB;YAA0B,MAAM,EAAC,QAAjC;YAA0C,SAAS,EAAC,WAApD;YAAA,WACEN,IADF;UAAA;YAAA;YAAA;YAAA;UAAA,QALD,eAQC;YAAA;YAAA;YAAA;UAAA,QARD,eASC,QAAC,IAAD,CAAM,IAAN;YAAW,IAAI,EAAEQ,OAAjB;YAA0B,MAAM,EAAC,QAAjC;YAA0C,SAAS,EAAC,WAApD;YAAA,WACER,IADF;UAAA;YAAA;YAAA;YAAA;UAAA,QATD;QAAA;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA,QAND;IAAA;MAAA;MAAA;MAAA;IAAA,QADD;EAwBD;AACA;;GApDQJ,S;;KAAAA,S;AAsDT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}